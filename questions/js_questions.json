{
  "questions": [
    {
      "question": "Что возвращает оператор typeof для массивов в JavaScript?",
      "options": ["'array'", "'object'", "'string'", "'undefined'"],
      "correctOption": 1
    },
    {
      "question": "Какой метод создает новый массив с результатом вызова указанной функции для каждого элемента массива?",
      "options": ["map()", "filter()", "reduce()", "forEach()"],
      "correctOption": 0
    },
    {
      "question": "Какой оператор используется для того, чтобы проверить, как тип, так и значение?",
      "options": ["==", "===", "equals", "=="],
      "correctOption": 1
    },
    {
      "question": "Что делает метод push() в JavaScript?",
      "options": ["Добавляет один или более элементов в конец массива", "Удаляет последний элемент из массива", "Добавляет элемент в начало массива", "Удаляет первый элемент из массива"],
      "correctOption": 0
    },
    {
      "question": "Как объявить функцию в JavaScript?",
      "options": ["function myFunction() {}", "def myFunction() {}", "function:myFunction() {}", "func myFunction() {}"],
      "correctOption": 0
    },
    {
      "question": "Что возвращает метод Array.prototype.pop()?",
      "options": ["Удаленный последний элемент массива", "Длину массива", "Новый массив без последнего элемента", "Первый элемент массива"],
      "correctOption": 0
    },
    {
      "question": "Какой метод используется для сортировки элементов массива?",
      "options": ["sort()", "order()", "arrange()", "organize()"],
      "correctOption": 0
    },
    {
      "question": "Какой метод объединяет все элементы массива в строку?",
      "options": ["concat()", "join()", "merge()", "glue()"],
      "correctOption": 1
    },
    {
      "question": "Как преобразовать строку в число в JavaScript?",
      "options": ["Number()", "parseInt()", "parseFloat()", "Все выше перечисленное"],
      "correctOption": 3
    },
    {
      "question": "Что делает метод Array.prototype.shift()?",
      "options": ["Удаляет первый элемент массива", "Удаляет последний элемент массива", "Добавляет элемент в начало массива", "Добавляет элемент в конец массива"],
      "correctOption": 0
    },
    {
      "question": "Какой оператор используется для проверки нестрогого равенства в JavaScript?",
      "options": ["==", "===", "equals", "!="],
      "correctOption": 0
    },
    {
      "question": "Какой метод используется для поиска подстроки в строке?",
      "options": ["indexOf()", "search()", "includes()", "Все выше перечисленное"],
      "correctOption": 3
    },
    {
      "question": "Какой из следующих методов НЕ изменяет исходный массив?",
      "options": ["map()", "splice()", "push()", "pop()"],
      "correctOption": 0
    },
    {
      "question": "Что делает метод Array.prototype.slice()?",
      "options": ["Создает новый массив, содержащий копию части исходного массива", "Удаляет часть массива", "Изменяет элементы массива на месте", "Объединяет два или более массивов"],
      "correctOption": 0
    },
    {
      "question": "Какой метод используется для проверки, содержит ли массив определенный элемент?",
      "options": ["includes()", "contains()", "has()", "exists()"],
      "correctOption": 0
    },
    {
      "question": "Что делает метод Array.prototype.filter()?",
      "options": ["Создает новый массив с элементами, прошедшими проверку", "Создает новый массив с результатом вызова функции для каждого элемента", "Изменяет элементы массива на месте", "Объединяет два или более массивов"],
      "correctOption": 0
    },
    {
      "question": "Что такое замыкание в JavaScript?",
      "options": ["Функция, которая имеет доступ к переменным из своей внешней области", "Объект, содержащий набор методов", "Функция, вызывающая саму себя", "Механизм наследования в JavaScript"],
      "correctOption": 0
    },
    {
      "question": "Какой метод используется для объединения двух или более массивов?",
      "options": ["concat()", "merge()", "combine()", "join()"],
      "correctOption": 0
    },
    {
      "question": "Что возвращает метод Array.prototype.reduce()?",
      "options": ["Один итоговый результат", "Новый массив с элементами, прошедшими проверку", "Длину массива", "Первый элемент массива"],
      "correctOption": 0
    },
    {
      "question": "Как проверить, является ли значение массивом в JavaScript?",
      "options": ["Array.isArray()", "typeof", "isArray()", "instanceof Array"],
      "correctOption": 0
    },
    {
      "question": "Что такое промис в JavaScript?",
      "options": ["Объект, представляющий результат асинхронной операции", "Функция, вызывающая саму себя", "Переменная, доступная во всей программе", "Метод объекта"],
      "correctOption": 0
    },
    {
      "question": "Какой метод используется для выполнения функции для каждого элемента массива?",
      "options": ["forEach()", "map()", "filter()", "reduce()"],
      "correctOption": 0
    },
    {
      "question": "Что возвращает метод Array.prototype.find()?",
      "options": ["Первый элемент, прошедший проверку", "Все элементы, прошедшие проверку", "Новый массив с элементами, прошедшими проверку", "Индекс первого элемента, прошедшего проверку"],
      "correctOption": 0
    },
    {
      "question": "Как преобразовать объект в JSON строку?",
      "options": ["JSON.stringify()", "JSON.parse()", "toString()", "toJSON()"],
      "correctOption": 0
    },
    {
      "question": "Что делает оператор '...' (spread) в JavaScript?",
      "options": ["Расширяет выражение в местах, где ожидается несколько аргументов", "Соединяет строки", "Клонирует объект", "Сортирует массив"],
      "correctOption": 0
    },
    {
      "question": "Что возвращает метод Array.prototype.includes()?",
      "options": ["true, если массив содержит указанный элемент, иначе false", "Индекс элемента, если он найден", "Все элементы, содержащие указанный элемент", "Длину массива"],
      "correctOption": 0
    },
    {
      "question": "Как объявить переменную, значение которой нельзя изменить?",
      "options": ["const", "let", "var", "static"],
      "correctOption": 0
    },
    {
      "question": "Какой из методов удаляет последний элемент массива?",
      "options": ["pop()", "push()", "shift()", "unshift()"],
      "correctOption": 0
    },
    {
      "question": "Что такое функция обратного вызова (callback function) в JavaScript?",
      "options": ["Функция, переданная другой функции в качестве аргумента", "Функция, вызывающая саму себя", "Функция, которая возвращает другую функцию", "Метод объекта"],
      "correctOption": 0
    },
    {
      "question": "Какой метод проверяет, удовлетворяет ли хотя бы один элемент массива условию?",
      "options": ["some()", "every()", "filter()", "find()"],
      "correctOption": 0
    },
    {
      "question": "Что возвращает метод Array.prototype.every()?",
      "options": ["true, если все элементы массива удовлетворяют условию", "false, если хотя бы один элемент массива удовлетворяет условию", "Массив элементов, удовлетворяющих условию", "Индекс первого элемента, удовлетворяющего условию"],
      "correctOption": 0
    },
    {
      "question": "Как преобразовать JSON строку в объект JavaScript?",
      "options": ["JSON.parse()", "JSON.stringify()", "toObject()", "parseJSON()"],
      "correctOption": 0
    },
    {
      "question": "Как создать новый объект в JavaScript?",
      "options": ["new Object()", "Object.create()", "{}", "Все выше перечисленное"],
      "correctOption": 3
    },
    {
      "question": "Что делает метод Array.prototype.reverse()?",
      "options": ["Изменяет порядок элементов массива на обратный", "Создает новый массив с элементами в обратном порядке", "Возвращает индекс последнего элемента массива", "Удаляет последний элемент массива"],
      "correctOption": 0
    },
    {
      "question": "Как проверить, является ли значение функцией в JavaScript?",
      "options": ["typeof value === 'function'", "typeof value === 'object'", "value instanceof Function", "value === 'function'"],
      "correctOption": 0
    },
    {
      "question": "Что такое строгий режим ('use strict') в JavaScript?",
      "options": ["Режим, который помогает выявить ошибки в коде", "Режим, который делает код быстрее", "Режим, который включает новые возможности языка", "Режим, который запрещает использование определенных синтаксических конструкций"],
      "correctOption": 0
    },
    {
      "question": "Какой из методов объединяет все элементы массива в строку, разделенную запятыми?",
      "options": ["toString()", "join()", "concat()", "split()"],
      "correctOption": 1
    },
    {
      "question": "Что делает оператор '===' в JavaScript?",
      "options": ["Сравнивает как тип, так и значение", "Сравнивает только тип", "Сравнивает только значение", "Присваивает значение"],
      "correctOption": 0
    },
    {
      "question": "Какой метод используется для удаления пробелов с обеих сторон строки?",
      "options": ["trim()", "slice()", "replace()", "split()"],
      "correctOption": 0
    },
    {
      "question": "Что возвращает метод Array.prototype.concat()?",
      "options": ["Новый массив, состоящий из объединенных массивов", "Количество элементов в объединенных массивах", "Первый элемент объединенного массива", "Массив объектов, каждый из которых содержит элементы из обоих массивов"],
      "correctOption": 0
    }
  ]
}
